{
    "ClientLoc.ServerRestart.crashMessage": "Došlo k chybovému ukončení Pylance.",
    "ClientLoc.ServerRestart.crashRestartingMessage": "Došlo k chybovému ukončení Pylance. Když vyberete spustitelný soubor Node.js pro spuštění Pylance, Pylance se restartuje.",
    "ClientLoc.ServerRestart.restartingMessage": "Restartuje se Pylance pomocí Node.js...",
    "ClientLoc.ServerRestart.selectButton": "Vybrat",
    "ClientLoc.ServerRestart.selectNodeJsTitle": "Vybrat spustitelný soubor Node.js pro spuštění Pylance",
    "ClientLoc.askNodeSafetyQuestion": "Služba Pylance je nakonfigurovaná tak, aby běžela s {0}. Chcete ke spuštění služby Pylance použít tento spustitelný soubor?",
    "ClientLoc.autoImportCompletionsStatusItem.name": "Režim dokončení automatického importu v Pythonu",
    "ClientLoc.autoImportCompletionsStatusItem.text": "Dokončení automatického importu: {0}",
    "ClientLoc.autoImportCompletionsStatusItem.titleOff": "Přepnout na vypnuto",
    "ClientLoc.autoImportCompletionsStatusItem.titleOn": "Přepnout na zapnuto",
    "ClientLoc.crashTooManyRestarts": "Během posledních 3 minut došlo 5krát k chybě Pylance. Služba Pylance nebude restartována. Další podrobnosti najdete na [tomto odkazu](https://aka.ms/AApf7ox).",
    "ClientLoc.pylanceAndPythonPrereleaseExtensionMismatch": "Rozšíření Pylance a Python mají nekompatibilní sdílené závislosti.\r\nUjistěte se prosím, že obě rozšíření mají nejnovější předběžnou verzi.",
    "ClientLoc.pylanceAndPythonStableExtensionMismatch": "Rozšíření Pylance a Python mají nekompatibilní sdílené závislosti.\r\nUjistěte se prosím, že obě rozšíření mají nejnovější stabilní verzi.",
    "ClientLoc.typeCheckingModeStatusItem.name": "Režim kontroly typů v Pythonu",
    "ClientLoc.typeCheckingModeStatusItem.pickerPlaceholder": "Aktuální režim: {0}. Vyberte režim kontroly typů.",
    "ClientLoc.typeCheckingModeStatusItem.pickerSettingsPage": "zobrazit na stránce nastavení",
    "ClientLoc.typeCheckingModeStatusItem.textFormatted": "Kontrola typů: {0}",
    "ClientLoc.typeCheckingModeStatusItem.textFormattedFromConfig": "Kontrola typů: {0} (z {1})",
    "ClientLoc.typeCheckingModeStatusItem.title": "Vybrat režim kontroly typů",
    "ClientLoc.typeCheckingModeStatusItem.titleConfig": "Otevřít konfiguraci",
    "ClientLoc.updateSettingsErrorMsgFormatted": "Aktualizace nastavení „{0}.{1}“ se nezdařila.",
    "Common.Help": "Nápověda",
    "Common.No": "Ne",
    "Common.Yes": "Ano",
    "Common.reload": "Načíst znovu",
    "Common.remindMeLater": "Připomenout později",
    "LanguageServer.settingsMigratedMessage": "Nastavení použitelná pro Microsoft Language Server se zkopírovala do nastavení Pylance. Podrobnosti najdete v souborech settings.json.",
    "LanguageServer.settingsMigrationError": "Následující nastavení není možné migrovat:",
    "LanguageServer.settingsNotOverridable": "{0} nelze nastavit, pokud se používá soubor pyrightconfig.json nebo pyproject.toml.",
    "Refactoring.MoveSymbol.newFileDetail": "Zadejte cestu nebo vyberte cílový soubor",
    "Refactoring.MoveSymbol.newFileLabel": "Zadejte cestu k cílovému souboru.",
    "Refactoring.MoveSymbol.openDialogOpenLabel": "Vybrat",
    "Refactoring.MoveSymbol.openDialogTitle": "Vyberte nový soubor, do kterého chcete symbol přesunout...",
    "Refactoring.MoveSymbol.progressBarTitle": "Přesunout symbol do...",
    "Refactoring.MoveSymbol.quickPickPlaceHolder": "Hledat cílový soubor",
    "Refactoring.MoveSymbol.quickPickTitle": "Vyberte cíl pro přesun",
    "Refactoring.MoveSymbol.separatorText": "Cílové soubory",
    "Refactoring.SearchImports.quickPickPlaceHolder": "Hledat importy",
    "Refactoring.SearchImports.quickPickTitle": "Hledat další odpovídající importy",
    "commands.pylance.docstrings.fold.title": "Pylance: Docstring – sbalit všechny",
    "commands.pylance.docstrings.unfold.title": "Pylance: Docstring – rozbalit všechny",
    "commands.pylance.gotoOutputChannel.title": "Pylance: Přejít na výstupní kanál",
    "commands.pylance.indexing.clearPersistedIndices.title": "Pylance: Vymazat všechny trvalé indexy",
    "commands.pylance.logging.start.title": "Pylance: Spustit protokolování",
    "commands.pylance.logging.stop.title": "Pylance: Zastavit protokolování",
    "commands.pylance.profiling.start.title": "Pylance: Spustit profilaci",
    "commands.pylance.profiling.stop.title": "Pylance: Zastavit profilaci",
    "commands.pylance.reportIssue.title": "Pylance: Nahlásit problém...",
    "settings.languageServerMode.default.description": "Umožňuje pro Pylance zachovat výchozí nastavení.",
    "settings.languageServerMode.description": "Umožňuje pro nastavení vybrat předdefinovanou sadu hodnot. Další podrobnosti najdete na [tomto odkazu](https://aka.ms/languageserver-mode).",
    "settings.languageServerMode.full.description": "Ve výchozím nastavení povolí většinu funkcí Pylance. Podle odkazu v popisu přesně zjistíte, na jakou hodnotu jsou nakonfigurována konkrétní nastavení.",
    "settings.languageServerMode.light.description": "Umožňuje nastavit Pylance do odlehčeného režimu, ve kterém bude provádět pouze nezbytné úlohy. Podle odkazu v popisu přesně zjistíte, na jakou hodnotu jsou nakonfigurována konkrétní nastavení.",
    "settings.python.analysis.aiCodeActions.description": "Povolte nebo zakažte akce s kódem pomocí AI. Vyžaduje, aby bylo povolené rozšíření pro Copilot Chat.",
    "settings.python.analysis.aiCodeActions.implementAbstractClasses.description": "Umožňuje povolit nebo zakázat pomoc AI při implementaci zděděných abstraktních tříd.",
    "settings.python.analysis.autoFormatStrings.description.message": "When typing a `{` in a string, automatically prefix the string with an `f`.",
    "settings.python.analysis.autoImportCompletions.description": "Povolte dokončování automatického importu.",
    "settings.python.analysis.autoIndent.description": "Při psaní kódu Pythonu automaticky upravujte odsazení na základě sémantiky jazyka.",
    "settings.python.analysis.autoSearchPaths.description": "Automatically add common search paths like `src`.",
    "settings.python.analysis.cacheLSPData.description": "Ukládáním dat LSP do mezipaměti lze dosáhnout rychlejšího doplňování. Jde o experimentální funkci, která může způsobit, že Pylance přestane fungovat.",
    "settings.python.analysis.completeFunctionParens.description": "Přidejte závorky do dokončování funkcí.",
    "settings.python.analysis.diagnosticMode.description": "Obor analýzy pro zobrazení diagnostiky.",
    "settings.python.analysis.diagnosticSeverityOverrides.description": "Allows a user to override the severity levels for individual diagnostics. \r\n\r\nUse the rule name as a key and one of `error`, `warning`, `information`, `none`, `true` (alias for `error`) or `false` (alias for `none`) as value. The default value shown for each diagnostic is the default when #python.analysis.typeCheckingMode# is set to `off`. See [here](https://github.com/microsoft/pyright/blob/main/docs/configuration.md#diagnostic-rule-defaults) for defaults for each type checking mode (`off`, `basic` and `strict`).",
    "settings.python.analysis.disableTaggedHints.description": "Zakažte diagnostiku nápovědy se speciální nápovědou pro zašedlý nebo přeškrtnutý text.",
    "settings.python.analysis.displayEnglishDiagnostics.description": "Zobrazí diagnostiku v angličtině bez ohledu na jazyk zobrazení VS Code.",
    "settings.python.analysis.enablePytestSupport.description": "Povolí podporu pytestu v Pylance.",
    "settings.python.analysis.enableSyncServer.description": "Použijte režim sync server [Experimentální]. Jenom pro interní použití může dojít k tomu, že Pylance přestane fungovat.",
    "settings.python.analysis.exclude.description": "Paths of directories or files that should not be included. These override the include directories, allowing specific subdirectories to be excluded. \r\n\r\nNote that files in the exclude paths may still be included in the analysis if they are referenced (imported) by source files that are not excluded. \r\n\r\nPaths may contain wildcard characters `**` (a directory or multiple levels of directories), `*` (a sequence of zero or more characters), or `?` (a single character). \r\n\r\nIf no exclude paths are specified, Pylance automatically excludes the following: `**/node_modules`, `**/__pycache__`, `.git` and any virtual environment directories. If the path contains a `${workspaceFolder:<workspaceName>}` variable, the glob pattern will only apply to the corresponding workspace in a multi-root workspace environment.",
    "settings.python.analysis.extraCommitChars.description": "Pokud je to možné, povolte použití znaku „.“ „,“ (jako potvrzovacích znaků).",
    "settings.python.analysis.extraPaths.description": "Další cesty k překladu hledání importu",
    "settings.python.analysis.fixAll.description": "opravy zdrojů, které se mají spustit při opravě všeho.",
    "settings.python.analysis.generateWithTypeAnnotation.description": "Při generování kódu přidejte poznámky o typu. Výchozí hodnota pro režim kontroly typů „off“ je false a pro ostatní režimy je true.",
    "settings.python.analysis.gotoDefinitionInStringLiteral.description": "U řetězcových literálů, které vypadají jako názvy modulů, umožňuje přejít k definici modulu.",
    "settings.python.analysis.ignore.description": "Paths of directories or files whose diagnostic output (errors and warnings) should be suppressed even if they are an included file or within the transitive closure of an included file. \r\n\r\nPaths may contain wildcard characters `**` (a directory or multiple levels of directories), `*` (a sequence of zero or more characters), or `?` (a single character). \r\n\r\nIf the path contains a `${workspaceFolder:<workspaceName>}` variable, the glob pattern will only apply to the corresponding workspace in a multi-root workspace environment.",
    "settings.python.analysis.importFormat.description": "Definuje výchozí formát pro import modulů.",
    "settings.python.analysis.include.description": "Paths of directories or files that should be included. If no paths are specified, Pylance defaults to the workspace root directory. \r\n\r\nPaths may contain wildcard characters `**` (a directory or multiple levels of directories), `*` (a sequence of zero or more characters), or `?` (a single character). \r\n\r\nIf the path contains a `${workspaceFolder:<workspaceName>}` variable, the glob pattern will only apply to the corresponding workspace in a multi-root workspace environment.",
    "settings.python.analysis.includeAliasesFromUserFiles.description": "Umožňuje zahrnout symboly aliasů ze souborů uživatelů. Díky tomu se symboly aliasů zobrazí ve funkcích, jako je přidání importu add import nebo automatický import auto import.",
    "settings.python.analysis.indexing.description": "Povolte indexování nainstalovaných knihoven třetích stran a uživatelských souborů pro jazykové funkce, jako je automatický import, přidání importu, symboly pracovního prostoru atd.",
    "settings.python.analysis.inlayHints.callArgumentNames.description": "Povolit nebo zakázat pomocné parametry pro vložené texty pro názvy argumentů volání:\r\n```python\r\ndatetime('year='2019, 'month='10, 'day='27)\r\n```\r\n",
    "settings.python.analysis.inlayHints.functionReturnTypes.description": "Povolit nebo zakázat pomocné parametry vloženého kódu pro návratové typy funkcí:\r\n```python\r\ndef foo(x:int) '-> int':\r\n\treturn x\r\n```\r\n",
    "settings.python.analysis.inlayHints.pytestParameters.description": "Povolte nebo zakažte vložené tipy pro typy parametrů funkce pytest:\r\n```python\r\ndef test_foo(my_fixture: 'str'):\r\n\tassert(my_fixture == 'foo')\r\n```\r\n",
    "settings.python.analysis.inlayHints.variableTypes.description": "Povolte nebo zakažte vložené nápovědy pro typy proměnných. Pro přiřazení literálů nebo konstant se nezobrazují nápovědy:\r\n```python\r\nfoo':list[str]' = [\"a\"]\r\n \r\n```\r\n",
    "settings.python.analysis.logLevel.description": "Určuje úroveň protokolování pro panel Výstup.",
    "settings.python.analysis.nodeExecutable.description": "Cesta ke spustitelnému souboru Node.js, který se má použít pro spuštění jazykového serveru. Pokud se nezadá, jazykový server použije spustitelný soubor Node.js dodávaný s editorem VS Code. Tuto možnost nastavte, pokud máte potíže s vyčerpáním paměti Pylance. Další informace najdete [tady](https://aka.ms/AApf7ox).",
    "settings.python.analysis.packageIndexDepths.description": "Používá se k přepsání počtu úrovní v rámci nainstalovaných balíčků, které se mají indexovat na základě jednotlivých balíčků. Ve výchozím nastavení se indexují pouze moduly nejvyšší úrovně (depth = 1). Pokud chcete indexovat dílčí moduly, zvyšte hloubku (depth) o 1 pro každou úroveň dílčího modulu, který chcete indexovat. Přijímané hodnoty jsou:\r\n```JSON\r\n{\"name\": \"package name (str)\",\r\n \"depth\": \"depth to scan (int)\",\r\n \"includeAllSymbols\": \"whether to include all symbols (bool)\"}\r\n\r\n```\r\nPokud je možnost includeAllSymbols nastavená na false, budou zahrnuty pouze symboly v __all__ každého balíčku. Když je nastavená na true, Pylance indexuje všechny deklarace symbolů modulu nebo nejvyšší úrovně v souboru.  \r\n  \r\nPříklad použití: \r\n```JSON\r\n[\r\n\t{\"name\": \"sklearn\", \"depth\": 2, \"includeAllSymbols\": true},\r\n\t{\"name\": \"matplotlib\", \"depth\": 3, \"includeAllSymbols\": false}\r\n]\r\n\r\n```\r\n",
    "settings.python.analysis.persistAllIndices.description": "Indexy pro všechny knihovny třetích stran se budou uchovávat na disku.",
    "settings.python.analysis.regenerateStdLibIndices.description": "Místo využívání sdílených indexů stdlib.json pro všechny verze Pythonu vygenerujte pro každý pracovní prostor jedinečné indexy přizpůsobené konkrétní verzi a platformě Pythonu. Na rozdíl od použití předem vytvořených indexů stdlib bude mít tento proces opětovného generování vliv na výkon.",
    "settings.python.analysis.reportExtraTelemetry.description": "Nahlásit další telemetrii [experimentální]. Jenom pro interní použití, může dojít ke zpomalení Pylance.",
    "settings.python.analysis.showOnlyDirectDependenciesInAutoImport.description": "Zobrazit pouze přímé závislosti deklarované v requirements.txt nebo pyproject.toml v návrzích „automatického importu“, pokud existují. To se týká jenom „automatického importu“ pro dokončení. Akce kódu „přidat import“ bude i nadále zobrazovat všechny možné importy.",
    "settings.python.analysis.stubPath.description": "Cesta k adresáři obsahujícímu soubory se zástupnými procedurami vlastních typů",
    "settings.python.analysis.supportDocstringTemplate.description": "Umožňuje povolit nebo zakázat podporu generování řetězců docstring. V prázdném řetězci docstring vygenerujte docstring stisknutím kláves Ctrl+mezerník.",
    "settings.python.analysis.supportRestructuredText.description": "Umožňuje povolit nebo zakázat podporu pro reStructuredText v docstrings.",
    "settings.python.analysis.typeEvaluation.analyzeUnannotatedFunctions.description": "Analyzovat a hlásit chyby u funkcí a metod, které nemají typové anotace pro vstupní parametry nebo návratové typy. Výchozí hodnota pro toto nastavení je true.",
    "settings.python.analysis.typeEvaluation.deprecateTypingAliases.description": "[PEP 585](https://peps.python.org/pep-0585) indicates that aliases to types in standard collections that were introduced solely to support generics are deprecated as of Python 3.9. This switch controls whether these are treated as deprecated. This applies only when pythonVersion is 3.9 or newer. The default value for this setting is `false` but may be switched to `true` in the future.",
    "settings.python.analysis.typeEvaluation.disableBytesTypePromotions.description": "Zakáže starší chování, kdy jsou `bytearray` a `memoryview` považovány za podtypy `bytes`. [PEP 688](https://peps.python.org/pep-0688/#no-special-meaning-for-bytes) toto chování vyřazuje, ale tento přepínač slouží k obnovení staršího chování. Výchozí hodnota pro toto nastavení je false.",
    "settings.python.analysis.typeEvaluation.enableExperimentalFeatures.description": "Povolí sadu experimentálních (většinou nezdokumentovaných) funkcí, které odpovídají navrhovaným nebo průzkumným změnám standardu psaní v jazyce Python. Tyto funkce se pravděpodobně změní nebo budou odstraněny, proto by se neměly používat jinak než pro experimentální účely. Výchozí hodnota pro toto nastavení je `false`.",
    "settings.python.analysis.typeEvaluation.enableReachabilityAnalysis.description": "Pokud je tato možnost povolena, kód, který je analýzou typů určen jako nedosažitelný, je hlášen pomocí označené nápovědy. Toto nastavení nemá vliv na kód, který je určen jako nedosažitelný bez ohledu na analýzu typů; takový kód je vždy hlášen jako nedosažitelný. Toto nastavení nemá žádný vliv ani při použití verze pyright příkazového řádku, protože nikdy nevygeneruje označené pomocné parametry pro nedosažitelný kód.",
    "settings.python.analysis.typeEvaluation.enableTypeIgnoreComments.description": "[PEP 484](https://peps.python.org/pep-0484) defines support for `# type: ignore` comments. This switch enables or disables support for these comments. The default value for this setting is `true`. This does not affect `# pyright: ignore` comments.",
    "settings.python.analysis.typeEvaluation.strictDictionaryInference.description": "When inferring the type of a dictionary’s keys and values, use strict type assumptions. For example, the expression \r\n\r\n```python\r\n{'a': 1, 'b': 'a'}\r\n```\r\n could be inferred to be of type `dict[str, Any]` or `dict[str, int | str]`. If this setting is true, it will use the latter (stricter) type. The default value for this setting is `false`.",
    "settings.python.analysis.typeEvaluation.strictListInference.description": "When inferring the type of a list, use strict type assumptions. For example, the expression \r\n\r\n```python\r\n[1, 'a', 3.4]\r\n```\r\n could be inferred to be of type `list[Any]` or `list[int | str | float]`. If this setting is true, it will use the latter (stricter) type. The default value for this setting is `false`.",
    "settings.python.analysis.typeEvaluation.strictParameterNoneValue.description": "[PEP 484](https://peps.python.org/pep-0484) indicates that when a function parameter is assigned a default value of None, its type should implicitly be Optional even if the explicit type is not. When enabled, this rule requires that parameter type annotations use Optional explicitly in this case. The default value for this setting is `true`.",
    "settings.python.analysis.typeEvaluation.strictSetInference.description": "When inferring the type of a set, use strict type assumptions. For example, the expression \r\n\r\n```python\r\n{1, 'a', 3.4}\r\n```\r\n could be inferred to be of type `set[Any]` or `set[int | str | float]`. If this setting is true, it will use the latter (stricter) type. The default value for this setting is `false`.",
    "settings.python.analysis.typecheckingMode.description": "Defines the default rule set for type checking.",
    "settings.python.analysis.typeshedPaths.description": "Cesty k vyhledání modulů typeshed.",
    "settings.python.analysis.useLibraryCodeForTypes.description": "Pomocí implementací knihovny můžete extrahovat informace o typu, pokud není k dispozici zástupná procedura typu.",
    "settings.python.analysis.userFileIndexingLimit.description": "Maximální počet uživatelských souborů, které se mají indexovat v pracovním prostoru. Indexování souborů je úloha náročná na výkon. Pomocí tohoto nastavení můžete omezit počet souborů, které chcete indexovat. Pokud zadáte -1, budeme indexovat všechny soubory.",
    "settings.typecheckingMode.basic.description": "All rules from `off` + `basic` type checking rules.",
    "settings.typecheckingMode.off.description": "Zobrazte diagnostiku pro neplatnou syntaxi, nerozpoznané importy, nedefinované proměnné.",
    "settings.typecheckingMode.standard.description": "All rules from `basic` + `standard` type checking rules.",
    "settings.typecheckingMode.strict.description": "All rules from `standard` + `strict` type checking rules."
}
