{
    "ClientLoc.ServerRestart.crashMessage": "Pylance ist abgestürzt.",
    "ClientLoc.ServerRestart.crashRestartingMessage": "Pylance ist abgestürzt. Die Pylance wird neu gestartet, wenn Sie eine Node.js ausführbare Datei auswählen, um Pylance auszuführen.",
    "ClientLoc.ServerRestart.restartingMessage": "Die Pylance wird mit Node.js neu gestartet...",
    "ClientLoc.ServerRestart.selectButton": "Auswählen",
    "ClientLoc.ServerRestart.selectNodeJsTitle": "Wählen Sie Node.js ausführbare Datei aus, um Pylance auszuführen.",
    "ClientLoc.askNodeSafetyQuestion": "Pylance ist für die Ausführung mit {0} konfiguriert. Möchten Sie diese ausführbare Datei zum Ausführen von Pylance verwenden?",
    "ClientLoc.autoImportCompletionsStatusItem.name": "Python-Modus für Autoimport-Vervollständigungen",
    "ClientLoc.autoImportCompletionsStatusItem.text": "Autoimport-Vervollständigungen: {0}",
    "ClientLoc.autoImportCompletionsStatusItem.titleOff": "Ausschalten",
    "ClientLoc.autoImportCompletionsStatusItem.titleOn": "Einschalten",
    "ClientLoc.crashTooManyRestarts": "Pylance ist in den letzten 3 Minuten 5-mal abgestürzt. Pylance wird nicht neu gestartet. Weitere Informationen finden Sie unter [diesem Link](https://aka.ms/AApf7ox).",
    "ClientLoc.pylanceAndPythonPrereleaseExtensionMismatch": "Pylance- und Python-Erweiterungen weisen inkompatible freigegebene Abhängigkeiten auf.\r\nStellen Sie sicher, dass es sich bei beiden Erweiterungen um die neueste Vorabversion handelt.",
    "ClientLoc.pylanceAndPythonStableExtensionMismatch": "Pylance- und Python-Erweiterungen weisen inkompatible freigegebene Abhängigkeiten auf.\r\nStellen Sie sicher, dass es sich bei beiden Erweiterungen um die neueste stabile Version handelt.",
    "ClientLoc.typeCheckingModeStatusItem.name": "Python-Typüberprüfungsmodus",
    "ClientLoc.typeCheckingModeStatusItem.pickerPlaceholder": "Aktueller Modus: {0}. Wählen Sie den Typüberprüfungsmodus aus.",
    "ClientLoc.typeCheckingModeStatusItem.pickerSettingsPage": "auf Einstellungsseite anzeigen",
    "ClientLoc.typeCheckingModeStatusItem.textFormatted": "Typüberprüfung: {0}",
    "ClientLoc.typeCheckingModeStatusItem.textFormattedFromConfig": "Typüberprüfung: {0} (von {1})",
    "ClientLoc.typeCheckingModeStatusItem.title": "Typüberprüfungsmodus auswählen",
    "ClientLoc.typeCheckingModeStatusItem.titleConfig": "Konfiguration öffnen",
    "ClientLoc.updateSettingsErrorMsgFormatted": "Aktualisierung der Einstellung '{0}.{1}' fehlgeschlagen.",
    "Common.Help": "Hilfe",
    "Common.No": "Nein",
    "Common.Yes": "Ja",
    "Common.reload": "Neu laden",
    "Common.remindMeLater": "Später erinnern",
    "LanguageServer.settingsMigratedMessage": "Für Microsoft Language Server geltende Einstellungen wurden in die Pylanceeinstellungen kopiert. Weitere Informationen finden Sie in den settings.json-Dateien.",
    "LanguageServer.settingsMigrationError": "Die folgenden Einstellungen konnten nicht migriert werden:",
    "LanguageServer.settingsNotOverridable": "\"{0}\" kann nicht festgelegt werden, wenn pyrightconfig.json oder pyproject.toml verwendet wird.",
    "Refactoring.MoveSymbol.newFileDetail": "Pfad eingeben oder Zieldatei auswählen",
    "Refactoring.MoveSymbol.newFileLabel": "Zieldateipfad eingaben",
    "Refactoring.MoveSymbol.openDialogOpenLabel": "Auswählen",
    "Refactoring.MoveSymbol.openDialogTitle": "Wählen Sie eine neue Datei aus, in die das Symbol verschoben werden soll...",
    "Refactoring.MoveSymbol.progressBarTitle": "Symbol verschieben nach...",
    "Refactoring.MoveSymbol.quickPickPlaceHolder": "Zieldatei suchen",
    "Refactoring.MoveSymbol.quickPickTitle": "Ziel für Verschiebung auswählen",
    "Refactoring.MoveSymbol.separatorText": "Zieldateien",
    "Refactoring.SearchImports.quickPickPlaceHolder": "Importe suchen",
    "Refactoring.SearchImports.quickPickTitle": "Zusätzliche übereinstimmende Importe suchen",
    "commands.pylance.docstrings.fold.title": "Pylance: Alle Docstrings zusammenklappen",
    "commands.pylance.docstrings.unfold.title": "Pylance: Alle Docstrings aufklappen",
    "commands.pylance.gotoOutputChannel.title": "Pylance: Zum Ausgabekanal wechseln",
    "commands.pylance.indexing.clearPersistedIndices.title": "Pylance: Alle persistenten Indizes löschen",
    "commands.pylance.logging.start.title": "Pylance: Protokollierung starten",
    "commands.pylance.logging.stop.title": "Pylance: Protokollierung beenden",
    "commands.pylance.profiling.start.title": "Pylance: Profilerstellung starten",
    "commands.pylance.profiling.stop.title": "Pylance: Profilerstellung beenden",
    "commands.pylance.reportIssue.title": "Pylance: Problem melden...",
    "settings.languageServerMode.default.description": "Übernehmen Sie die Standardeinstellungen für Pylance.",
    "settings.languageServerMode.description": "Wählen Sie einen vordefinierten Satz von Werten für die Einstellungen aus. Weitere Informationen finden Sie unter [diesem Link](https://aka.ms/languageserver-mode).",
    "settings.languageServerMode.full.description": "Aktivieren Sie standardmäßig die meisten Pylance-Features. Unter dem Link in der Beschreibung erfahren Sie genau, welche Einstellungen auf welchen Wert festgelegt sind.",
    "settings.languageServerMode.light.description": "Legen Sie Pylance so fest, dass nur wichtige Aufgaben ausgeführt werden, um es zu erleichtern. Unter dem Link in der Beschreibung erfahren Sie genau, welche Einstellungen auf welchen Wert festgelegt sind.",
    "settings.python.analysis.aiCodeActions.description": "Aktivieren/Deaktivieren von KI-gestützten Codeaktionen. Erfordert die Aktivierung der Copilot Chaterweiterung.",
    "settings.python.analysis.aiCodeActions.implementAbstractClasses.description": "Hiermit wird die KI-Unterstützung zum Implementieren geerbter abstrakter Klassen aktiviert/deaktiviert.",
    "settings.python.analysis.autoFormatStrings.description.message": "When typing a `{` in a string, automatically prefix the string with an `f`.",
    "settings.python.analysis.autoImportCompletions.description": "Autoimport-Vervollständigungen aktivieren.",
    "settings.python.analysis.autoIndent.description": "Passen Sie den Einzug automatisch basierend auf der Sprachsemantik an, wenn Sie Python-Code eingeben.",
    "settings.python.analysis.autoSearchPaths.description": "Automatically add common search paths like `src`.",
    "settings.python.analysis.cacheLSPData.description": "Speichern Sie LSP-Daten für schnellere Vervollständigungen zwischen. Experimentell, kann dazu führen, dass Pylance nicht mehr funktioniert.",
    "settings.python.analysis.completeFunctionParens.description": "Fügen Sie Funktionsabschlüssen Klammern hinzu.",
    "settings.python.analysis.diagnosticMode.description": "Analysebereich zum Anzeigen der Diagnose.",
    "settings.python.analysis.diagnosticSeverityOverrides.description": "Allows a user to override the severity levels for individual diagnostics. \r\n\r\nUse the rule name as a key and one of `error`, `warning`, `information`, `none`, `true` (alias for `error`) or `false` (alias for `none`) as value. The default value shown for each diagnostic is the default when #python.analysis.typeCheckingMode# is set to `off`. See [here](https://github.com/microsoft/pyright/blob/main/docs/configuration.md#diagnostic-rule-defaults) for defaults for each type checking mode (`off`, `basic` and `strict`).",
    "settings.python.analysis.disableTaggedHints.description": "Deaktivieren Sie die Hinweisdiagnose mit speziellen Hinweisen für ausgegrauten oder durchgestrichenen Text.",
    "settings.python.analysis.displayEnglishDiagnostics.description": "Diagnose unabhängig von der Anzeigesprache des VS Code in Englisch anzeigen.",
    "settings.python.analysis.enablePytestSupport.description": "Aktiviert pytest-Unterstützung in Pylance.",
    "settings.python.analysis.enableSyncServer.description": "Verwenden des sync server Modus [Experimentell]. Nur zur internen Verwendung kann Pylance nicht mehr funktionieren.",
    "settings.python.analysis.exclude.description": "Paths of directories or files that should not be included. These override the include directories, allowing specific subdirectories to be excluded. \r\n\r\nNote that files in the exclude paths may still be included in the analysis if they are referenced (imported) by source files that are not excluded. \r\n\r\nPaths may contain wildcard characters `**` (a directory or multiple levels of directories), `*` (a sequence of zero or more characters), or `?` (a single character). \r\n\r\nIf no exclude paths are specified, Pylance automatically excludes the following: `**/node_modules`, `**/__pycache__`, `.git` and any virtual environment directories. If the path contains a `${workspaceFolder:<workspaceName>}` variable, the glob pattern will only apply to the corresponding workspace in a multi-root workspace environment.",
    "settings.python.analysis.extraCommitChars.description": "Die Verwendung von \".\", \"(\" als Commitzeichen zulassen, falls zutreffend.",
    "settings.python.analysis.extraPaths.description": "Zusätzliche Suchauflösungspfade für Importe",
    "settings.python.analysis.fixAll.description": "Quellkorrekturen, die in \"fix all\" ausgeführt werden sollen.",
    "settings.python.analysis.generateWithTypeAnnotation.description": "Fügen Sie beim Generieren von Code Typanmerkungen hinzu. Der Standardwert ist \"false\" für den Typüberprüfungsmodus \"off\" und \"true\" für andere Modi.",
    "settings.python.analysis.gotoDefinitionInStringLiteral.description": "Für Zeichenfolgenliterale, die wie Modulnamen aussehen, ermöglicht \"go to definition\", zum Modul zu wechseln.",
    "settings.python.analysis.ignore.description": "Paths of directories or files whose diagnostic output (errors and warnings) should be suppressed even if they are an included file or within the transitive closure of an included file. \r\n\r\nPaths may contain wildcard characters `**` (a directory or multiple levels of directories), `*` (a sequence of zero or more characters), or `?` (a single character). \r\n\r\nIf the path contains a `${workspaceFolder:<workspaceName>}` variable, the glob pattern will only apply to the corresponding workspace in a multi-root workspace environment.",
    "settings.python.analysis.importFormat.description": "Definiert das Standardformat für den Import von Modulen.",
    "settings.python.analysis.include.description": "Paths of directories or files that should be included. If no paths are specified, Pylance defaults to the workspace root directory. \r\n\r\nPaths may contain wildcard characters `**` (a directory or multiple levels of directories), `*` (a sequence of zero or more characters), or `?` (a single character). \r\n\r\nIf the path contains a `${workspaceFolder:<workspaceName>}` variable, the glob pattern will only apply to the corresponding workspace in a multi-root workspace environment.",
    "settings.python.analysis.includeAliasesFromUserFiles.description": "Schließen Sie Aliassymbole aus Benutzerdateien ein. Dadurch werden Aliassymbole erstellt, die in Features wie \"Import hinzufügen\" oder \"Automatischer Import\" angezeigt werden.",
    "settings.python.analysis.indexing.description": "Aktivieren Sie die Indizierung installierter Drittanbieterbibliotheken und Benutzerdateien für Sprachfeatures wie den automatischen Import, das Hinzufügen von Importen, Arbeitsbereichssymbole usw.",
    "settings.python.analysis.inlayHints.callArgumentNames.description": "Aktivieren/Deaktivieren von Inlayhinweisen für Aufrufargumentnamen:\r\n```python\r\ndatetime('year='2019, 'month='10, 'day='27)\r\n```\r\n",
    "settings.python.analysis.inlayHints.functionReturnTypes.description": "Aktivieren/Deaktivieren von Inlayhinweisen für Funktionsrückgabetypen:\r\n```python\r\ndef foo(x:int) '-> int':\r\n\treturn x\r\n```\r\n",
    "settings.python.analysis.inlayHints.pytestParameters.description": "Aktivieren/Deaktivieren von Inlayhinweisen für pytest-Funktionsparametertypen:\r\n```python\r\ndef test_foo(my_fixture: 'str'):\r\n\tassert(my_fixture == 'foo')\r\n```\r\n",
    "settings.python.analysis.inlayHints.variableTypes.description": "Aktivieren/Deaktivieren Sie Einblendhinweise für Variablentypen. Hinweise werden nicht für Zuweisungen von Literalen oder Konstanten angezeigt:\r\n```python\r\nfoo':list[str]' = [\"a\"]\r\n \r\n```\r\n",
    "settings.python.analysis.logLevel.description": "Gibt den Protokolliergrad für den Ausgabebereich an.",
    "settings.python.analysis.nodeExecutable.description": "Pfad zu einer ausführbaren Node.js-Datei, die zum Ausführen des Sprachservers verwendet werden soll. Wenn keine Angabe erfolgt, verwendet der Sprachserver die Node.js ausführbare Datei, die mit VS Code ausgeliefert wird. Legen Sie diese Option fest, wenn bei Problemen mit Pylance nicht genügend Arbeitsspeicher verfügbar ist. Weitere Informationen finden Sie [hier](https://aka.ms/AApf7ox).",
    "settings.python.analysis.packageIndexDepths.description": "Wird verwendet, um zu überschreiben, wie viele Ebenen unter installierten Paketen pro Paket indiziert werden sollen. Standardmäßig werden nur Module der obersten Ebene indiziert (depth = 1). Um Submodule zu indizieren, erhöhen Sie depth für jede Ebene des Submoduls, das Sie indizieren möchten, um 1. Akzeptierte Werte sind:\r\n```JSON\r\n{\"name\": \"package name (str)\",\r\n \"depth\": \"depth to scan (int)\",\r\n \"includeAllSymbols\": \"whether to include all symbols (bool)\"}\r\n\r\n```\r\nWenn \"includeAllSymbols\" auf \"false\" festgelegt ist, werden nur Symbole in den \"__all__\" jedes Pakets eingeschlossen. Wenn sie auf \"true\" festgelegt ist, indiziert Pylance alle Symboldeklarationen auf Modul-/oberster Ebene in der Datei.  \r\n  \r\nVerwendungsbeispiel: \r\n```JSON\r\n[\r\n\t{\"name\": \"sklearn\", \"depth\": 2, \"includeAllSymbols\": true},\r\n\t{\"name\": \"matplotlib\", \"depth\": 3, \"includeAllSymbols\": false}\r\n]\r\n\r\n```\r\n",
    "settings.python.analysis.persistAllIndices.description": "Indizes für alle Drittanbieterbibliotheken werden auf dem Datenträger beibehalten.",
    "settings.python.analysis.regenerateStdLibIndices.description": "Anstatt sich auf die freigegebenen stdlib.json-Indizes für alle Python-Versionen zu verlassen, generieren Sie eindeutige Indizes, die auf die spezifische Python-Version und -Plattform jedes Arbeitsbereichs zugeschnitten sind. Dieser Neugenerierungsprozess wirkt sich auf die Leistung aus, im Gegensatz zur Verwendung der vordefinierten stdlib-Indizes.",
    "settings.python.analysis.reportExtraTelemetry.description": "Melden zusätzlicher Telemetriedaten [experimentell]. Nur für die interne Verwendung. Kann die Pylance verlangsamen.",
    "settings.python.analysis.showOnlyDirectDependenciesInAutoImport.description": "Zeigt nur direkte Abhängigkeiten an, die in \"requirements.txt\" oder \"pyproject.toml\" in Vorschlägen für den automatischen Import deklariert sind, sofern vorhanden. Dies wirkt sich nur auf den automatischen Import für Vervollständigungen aus. Die Codeaktion \"Import hinzufügen\" zeigt weiterhin alle möglichen Importe an.",
    "settings.python.analysis.stubPath.description": "Pfad zum Verzeichnis, das Stubdateien vom benutzerdefinierten Typ enthält.",
    "settings.python.analysis.supportDocstringTemplate.description": "Aktiviert bzw. deaktiviert die Unterstützung für die docstring-Generierung. Verwenden Sie STRG+LEERTASTE in einer leeren docstring, um eine docstring zu generieren.",
    "settings.python.analysis.supportRestructuredText.description": "Aktivieren/Deaktivieren Sie die Unterstützung für reStructuredText in docstrings.",
    "settings.python.analysis.typeEvaluation.analyzeUnannotatedFunctions.description": "Analysieren und melden Sie Fehler für Funktionen und Methoden, die keine Typannotationen für Eingabeparameter oder Rückgabetypen haben. Der Standardwert für diese Einstellung ist „true“.",
    "settings.python.analysis.typeEvaluation.deprecateTypingAliases.description": "[PEP 585](https://peps.python.org/pep-0585) indicates that aliases to types in standard collections that were introduced solely to support generics are deprecated as of Python 3.9. This switch controls whether these are treated as deprecated. This applies only when pythonVersion is 3.9 or newer. The default value for this setting is `false` but may be switched to `true` in the future.",
    "settings.python.analysis.typeEvaluation.disableBytesTypePromotions.description": "Deaktiviert das alte Verhalten, bei dem `bytearray` und `memoryview` als Subtypen von `bytes` betrachtet werden. [PEP 688](https://peps.python.org/pep-0688/#no-special-meaning-for-bytes) veraltet dieses Verhalten, aber dieser Schalter wird bereitgestellt, um das ältere Verhalten wiederherzustellen. Der Standardwert für diese Einstellung ist `false`.",
    "settings.python.analysis.typeEvaluation.enableExperimentalFeatures.description": "Ermöglicht eine Reihe von experimentellen (meist undokumentierten) Funktionen, die vorgeschlagenen oder explorativen Änderungen am Python-Typisierungsstandard entsprechen. Diese Funktionen werden wahrscheinlich geändert oder entfernt, so dass sie nur zu Experimentierzwecken verwendet werden sollten. Der Standardwert für diese Einstellung ist `false`.",
    "settings.python.analysis.typeEvaluation.enableReachabilityAnalysis.description": "Wenn diese Option aktiviert ist, wird Code, der von der Typanalyse als nicht erreichbar erkannt wird, mithilfe eines markierten Hinweises gemeldet. Diese Einstellung wirkt sich nicht auf Code aus, der unabhängig von der Typanalyse als unerreichbar eingestuft wird; solcher Code wird immer als unerreichbar gemeldet. Diese Einstellung hat auch keine Auswirkung, wenn Sie die Kommandozeilenversion von pyright verwenden, da diese nie getaggte Hinweise für nicht erreichbaren Code ausgibt.",
    "settings.python.analysis.typeEvaluation.enableTypeIgnoreComments.description": "[PEP 484](https://peps.python.org/pep-0484) defines support for `# type: ignore` comments. This switch enables or disables support for these comments. The default value for this setting is `true`. This does not affect `# pyright: ignore` comments.",
    "settings.python.analysis.typeEvaluation.strictDictionaryInference.description": "When inferring the type of a dictionary’s keys and values, use strict type assumptions. For example, the expression \r\n\r\n```python\r\n{'a': 1, 'b': 'a'}\r\n```\r\n could be inferred to be of type `dict[str, Any]` or `dict[str, int | str]`. If this setting is true, it will use the latter (stricter) type. The default value for this setting is `false`.",
    "settings.python.analysis.typeEvaluation.strictListInference.description": "When inferring the type of a list, use strict type assumptions. For example, the expression \r\n\r\n```python\r\n[1, 'a', 3.4]\r\n```\r\n could be inferred to be of type `list[Any]` or `list[int | str | float]`. If this setting is true, it will use the latter (stricter) type. The default value for this setting is `false`.",
    "settings.python.analysis.typeEvaluation.strictParameterNoneValue.description": "[PEP 484](https://peps.python.org/pep-0484) indicates that when a function parameter is assigned a default value of None, its type should implicitly be Optional even if the explicit type is not. When enabled, this rule requires that parameter type annotations use Optional explicitly in this case. The default value for this setting is `true`.",
    "settings.python.analysis.typeEvaluation.strictSetInference.description": "When inferring the type of a set, use strict type assumptions. For example, the expression \r\n\r\n```python\r\n{1, 'a', 3.4}\r\n```\r\n could be inferred to be of type `set[Any]` or `set[int | str | float]`. If this setting is true, it will use the latter (stricter) type. The default value for this setting is `false`.",
    "settings.python.analysis.typecheckingMode.description": "Defines the default rule set for type checking.",
    "settings.python.analysis.typeshedPaths.description": "Pfade zum Suchen nach typeshed Modulen.",
    "settings.python.analysis.useLibraryCodeForTypes.description": "Verwenden Sie Bibliotheksimplementierungen, um Typinformationen zu extrahieren, wenn der Typstub nicht vorhanden ist.",
    "settings.python.analysis.userFileIndexingLimit.description": "Maximale Anzahl von Benutzerdateien, die im Arbeitsbereich indiziert werden sollen. Das Indizieren von Dateien ist eine leistungsintensive Aufgabe. Verwenden Sie diese Einstellung, um die Anzahl der Dateien einzuschränken, die indiziert werden sollen. Wenn Sie -1 eingeben, werden alle Dateien indiziert.",
    "settings.typecheckingMode.basic.description": "All rules from `off` + `basic` type checking rules.",
    "settings.typecheckingMode.off.description": "Diagnose für ungültige Syntax, nicht aufgelöste Importe und nicht definierte Variablen anzeigen.",
    "settings.typecheckingMode.standard.description": "All rules from `basic` + `standard` type checking rules.",
    "settings.typecheckingMode.strict.description": "All rules from `standard` + `strict` type checking rules."
}
